version: "3"

services:

  redis:
    container_name: redis
    image: redis:latest
    volumes:
      - ./data/cache/:/usr/local/cache
    expose:
      - 6379
    restart: on-failure
    
  database:
    container_name: database
    image: mongo:latest
    volumes:
      - ./data/database/:/usr/local/database
    expose:
      - 27017
    restart: on-failure


  users:
    container_name: users
    build:
      context: ./users
    stdin_open: true
    volumes:
      - ./users:/users
      - /users/node_modules
    environment:
      SERVICE_PORT: "${SERVICE_PORT_USERS}"
    depends_on:
      - database
    links:
      - database
    restart: on-failure

  parques:
    container_name: parques
    build:
      context: ./parques
    stdin_open: true
    volumes:
      - ./parques:/parques
      - /parques/node_modules
    environment:
      SERVICE_PORT: "${SERVICE_PORT_PARQUES}"
    depends_on:
      - database
    links:
      - database
    restart: on-failure

  iot:
    container_name: iot
    build:
      context: ./iot
    stdin_open: true
    volumes:
      - ./iot:/iot
      - /iot/node_modules
    environment:
      SERVICE_PORT: "${SERVICE_PORT_IOT}"
    depends_on:
      - database
    links:
      - database
    restart: on-failure

  payment:
    container_name: payment
    build:
      context: ./payment
    stdin_open: true
    volumes:
      - ./payment:/payment
      - /payment/node_modules
    environment:
      SERVICE_PORT: "${SERVICE_PORT_PAYMENT}"
    depends_on:
      - database
    links:
      - database
    restart: on-failure

  price:
    container_name: price
    build:
      context: ./price
    stdin_open: true
    volumes:
      - ./price:/price
      - /price/node_modules
    environment:
      SERVICE_PORT: "${SERVICE_PORT_PRICE}"
    depends_on:
      - database
    links:
      - database
    restart: on-failure

  route:
    container_name: route
    build:
      context: ./route
    stdin_open: true
    volumes:
      - ./route:/route
      - /route/node_modules
    environment:
      SERVICE_PORT: "${SERVICE_PORT_ROUTE}"
    depends_on:
      - database
    links:
      - database
    restart: on-failure


  gateway:
    container_name: gateway
    build:
      context: ./gateway
    stdin_open: true
    environment:
      SERVICE_PORT: "${SERVICE_PORT_GATEWAY}"
      SERVICE_PORT_USERS: "${SERVICE_PORT_USERS}"
      SERVICE_PORT_PARQUES: "${SERVICE_PORT_PARQUES}"
      SERVICE_PORT_IOT: "${SERVICE_PORT_IOT}"
      SERVICE_PORT_PAYMENT: "${SERVICE_PORT_PAYMENT}"
      SERVICE_PORT_PRICE: "${SERVICE_PORT_PRICE}"
      SERVICE_PORT_ROUTE: "${SERVICE_PORT_ROUTE}"
      SERVICE_PORT_DOC: "${SERVICE_PORT_DOC}"
    ports:
      - "${SERVICE_PORT_GATEWAY}:${SERVICE_PORT_GATEWAY}"
    depends_on:
      - users
      - parques
      - iot
      - payment
      - price
      - route
      - doc

  postgres:
    container_name: postgis
    image: kartoza/postgis
    environment:
      POSTGRES_DBNAME: artsis
      POSTGRES_USER: artsis
      POSTGRES_PASS: artsis
      POSTGRES_MULTIPLE_EXTENSIONS: postgis,hstore,postgis_topology,postgis_raster,pgrouting
    volumes:
      - './data/postgres:/var/lib/postgresql'
    restart: unless-stopped
    ports:
      - "5432:5432"

  geoserver:
    image: geonode/geoserver
    ports:
      - "8090:8080"
    volumes:
      - ./data/geoserver/data:/geoserver_data/data
    depends_on:
      - postgres

  doc:
    container_name: doc
    image: swaggerapi/swagger-ui
    volumes:
      - ./doc:/usr/share/nginx/html/swagger
    environment:
      API_URL: swagger/api.yaml
      BASE_URL: /doc

  frontend_app:
    build:
        context: ./frontend
    stdin_open: true
    restart: on-failure
    container_name: frontend
#    depends_on: 
#        - backend
    ports:
        - "80:80"
    volumes:
        - ./frontend:/frontend
        - /frontend/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - SASS_PATH=./node_modules;./src
